apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
data:
  LDAP_HOSTS: "openldap"
  LDAP_PORT: "389"
  LDAP_BASE_DN: "dc=example,dc=org"
  LDAP_USERNAME: "cn=admin,dc=example,dc=org"
  LDAP_PASSWORD: admin
  DB_CONNECTION: mysql
  DB_HOST: mysql
  DB_PORT: "3306"
  DB_DATABASE: osatemps
  DB_USERNAME: osatemps
  DB_PASSWORD: abc123
  SESSION_DRIVER: redis
  REDIS_HOST: redis
  REDIS_PORT: "6379"
  APP_DEBUG: "true"
  APP_URL: "http://osak8s.test"
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: backend-cron
spec:
  concurrencyPolicy: Replace
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 120
      backoffLimit: 1
      template:
        spec:
          containers:
            - args:
                - /bin/sh
                - -c
                - php artisan schedule:run
              envFrom:
                - configMapRef:
                    name: backend-config
              image: osatemps/app:latest
              imagePullPolicy: Always
              name: artisan-schedule
              resources:
                limits:
                  cpu: 200m
                  memory: 200M
                requests:
                  cpu: 100m
                  memory: 100M
          restartPolicy: Never
  schedule: "*/1 * * * *"
  startingDeadlineSeconds: 30
  successfulJobsHistoryLimit: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend
spec:
  minReadySeconds: 5
  replicas: 3
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: backend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: backend
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - backend
                topologyKey: kubernetes.io/hostname
              weight: 100
      initContainers:
        - args:
            - /bin/sh
            - -c
            - php artisan migrate
          envFrom:
            - configMapRef:
                name: backend-config
          image: osatemps/app:latest
          imagePullPolicy: Always
          name: artisan
      containers:
        - name: app
          envFrom:
            - configMapRef:
                name: backend-config
          image: osatemps/app:latest
          imagePullPolicy: Always
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 15
            tcpSocket:
              port: 8080
            timeoutSeconds: 30
          ports:
            - containerPort: 80
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: 8080
          resources:
            limits:
              cpu: 200m
              memory: 400M
            requests:
              cpu: 100m
              memory: 200M

      volumes:
        - emptyDir: {}
          name: codebase
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
  labels:
    app: backend
  name: backend
spec:
  rules:
    - host: osak8s.test
      http:
        paths:
          - backend:
              serviceName: backend
              servicePort: 8080
            path: /
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: master
        image: redis
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
---        
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
    role: master
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: master
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ldap
  name: openldap
spec:
  ports:
    - port: 389
  selector:
    app: ldap
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ldap
  labels:
    app: ldap
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ldap
    spec:
      containers:
        - name: ldap
          image: osixia/openldap:1.3.0
          ports:
            - containerPort: 389
              name: openldap
          env:
            - name: LDAP_ORGANISATION
              value: "Example Org."
            - name: LDAP_DOMAIN
              value: "example.org"
            - name: LDAP_ADMIN_PASSWORD
              value: "admin"
            - name: LDAP_TLS
              value: "false"
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - |
                    sleep 3
                    ldapadd -x -D "cn=admin,dc=example,dc=org" -w admin -f /container/service/slapd/assets/test/new-user.ldif -H ldap://
                    ldappasswd -s abc123 -D "cn=admin,dc=example,dc=org" -w admin -H ldap:// -x "uid=billy,dc=example,dc=org"
                    ldapadd -x -D "cn=admin,dc=example,dc=org" -w admin -H ldap:// << EOF
                    dn: uid=pepe,dc=example,dc=org
                    uid: pepe
                    cn: pepe
                    sn: 3
                    objectClass: top
                    objectClass: posixAccount
                    objectClass: inetOrgPerson
                    loginShell: /bin/bash
                    homeDirectory: /home/pepe
                    uidNumber: 14583103
                    gidNumber: 14564100
                    userPassword: {SSHA}j3lBh1Seqe4rqF1+NuWmjhvtAni1JC5A
                    mail: pepe@example.org
                    gecos: Pepe User
                    EOF
                    ldappasswd -s abc123 -D "cn=admin,dc=example,dc=org" -w admin -H ldap:// -x "uid=pepe,dc=example,dc=org"
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.7
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: osatemps
        - name: MYSQL_USER
          value: osatemps
        - name: MYSQL_PASSWORD
          value: abc123
        ports:
        - containerPort: 3306
          name: mysql
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  ports:
  - port: 8080
  selector:
    app: backend
  type: NodePort
